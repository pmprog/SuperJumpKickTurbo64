
static const unsigned char menufader[7] = { 
	COLOR_BLACK, COLOR_BROWN, COLOR_RED, COLOR_ORANGE, COLOR_LIGHTRED, COLOR_YELLOW, COLOR_WHITE
};
static const unsigned char selectfader[4] = { 
	COLOR_RED, COLOR_ORANGE, COLOR_LIGHTRED, COLOR_ORANGE
};

static const unsigned char menutitlecolours[440] = {
 0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,
 0x07,0x07,0x07,0x07,0x07,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x07,0x07,0x07,0x07,0x07,0x07,
 0x07,0x07,0x07,0x07,0x07,0x00,0x0b,0x0b,0x0b,0x00,0x07,0x00,0x0b,0x00,0x0b,0x00,0x07,0x00,0x0b,0x0b,0x0b,0x00,0x07,0x00,0x0b,0x0b,0x0b,0x00,0x07,0x00,0x0b,0x0b,0x0b,0x00,0x07,0x07,0x07,0x07,0x07,0x07,
 0x07,0x07,0x07,0x07,0x07,0x00,0x0c,0x0c,0x00,0x00,0x07,0x00,0x0c,0x00,0x0c,0x00,0x07,0x00,0x0c,0x00,0x0c,0x00,0x07,0x00,0x0c,0x0c,0x00,0x00,0x07,0x00,0x0c,0x00,0x0c,0x00,0x07,0x07,0x07,0x07,0x07,0x07,
 0x07,0x07,0x07,0x07,0x07,0x00,0x0f,0x0f,0x0f,0x00,0x07,0x00,0x0f,0x00,0x0f,0x00,0x07,0x00,0x0f,0x0f,0x0f,0x00,0x07,0x00,0x0f,0x0f,0x0f,0x00,0x07,0x00,0x0f,0x0f,0x0f,0x00,0x07,0x07,0x07,0x07,0x07,0x07,
 0x07,0x07,0x07,0x07,0x07,0x00,0x00,0x01,0x01,0x00,0x07,0x00,0x01,0x00,0x01,0x00,0x07,0x00,0x01,0x01,0x01,0x00,0x07,0x00,0x01,0x01,0x01,0x00,0x07,0x00,0x01,0x01,0x00,0x00,0x07,0x07,0x07,0x07,0x07,0x07,
 0x07,0x07,0x07,0x07,0x07,0x00,0x0f,0x0f,0x0f,0x00,0x07,0x00,0x0f,0x00,0x0f,0x00,0x07,0x00,0x0f,0x00,0x00,0x00,0x07,0x00,0x0f,0x0f,0x00,0x00,0x07,0x00,0x0f,0x0f,0x0f,0x00,0x07,0x07,0x07,0x07,0x07,0x07,
 0x07,0x07,0x07,0x07,0x07,0x00,0x0c,0x0c,0x0c,0x00,0x07,0x00,0x0c,0x0c,0x0c,0x00,0x07,0x00,0x0c,0x00,0x07,0x07,0x07,0x00,0x0c,0x0c,0x0c,0x00,0x07,0x00,0x0c,0x0c,0x0c,0x00,0x07,0x07,0x07,0x07,0x07,0x07,
 0x07,0x07,0x07,0x07,0x07,0x00,0x0b,0x0b,0x0b,0x00,0x07,0x00,0x0b,0x0b,0x0b,0x00,0x07,0x00,0x0b,0x00,0x07,0x07,0x07,0x00,0x0b,0x0b,0x0b,0x00,0x07,0x00,0x0b,0x00,0x0b,0x00,0x07,0x07,0x07,0x07,0x07,0x07,
 0x07,0x07,0x07,0x07,0x07,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x07,0x07,0x07,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x07,0x07,0x07,0x07,0x07,0x07,
 0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07
};


 // 768] = {
static const unsigned char menusprites[384] = {
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0x00,0x00,0x7f,0x00,0x00,0xff,0x00,0x3c,0xfb,0x00,0x7c,0x7f,0x1c,0x7e,0x7f,0x05,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x03,0x00,0x00,0x07,0x00,0x00,0xe7,0x00,0x01,0xef,0x01,0xf1,0xef,0x0d,0xf1,0xef,0x1d,0xe0,0xff,0x3d,0xe0,0xf7,0x3f,0xc0,0xf7,0xbf,0xc0,0xf3,0xdf,0xe0,0xf8,0xdf,0xf8,0x78,0xdf,0xfc,0x78,0xde,0xfe,0x60,0x9f,0x7e,0x00,0x05,
 0x00,0x00,0x00,0x00,0x07,0xc0,0x00,0x37,0xc0,0x00,0x77,0x80,0x00,0xf7,0x80,0xf8,0xff,0x00,0xf8,0xff,0x00,0xe0,0x7f,0x80,0x80,0x7f,0xe0,0x80,0x7f,0xf0,0x00,0x7b,0xf8,0x80,0x7d,0xf8,0xcf,0x3c,0xc0,0xff,0x3c,0x00,0xff,0x30,0x00,0xfc,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1e,0x00,0x03,0x1e,0x00,0x07,0x1e,0x00,0x0f,0x1e,0x01,0xef,0x1e,0x01,0xef,0x1f,0x01,0xef,0x0f,0x01,0xe7,0x8f,0x01,0xe7,0x9f,0x00,0xf7,0xff,0x00,0xf7,0xfe,0x00,0xf7,0xf8,0x00,0xf1,0xc0,0x03,0xf0,0x00,0x07,0xf0,0x00,0x07,0xc0,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,
 0x7e,0x7e,0x7f,0xfe,0xfe,0x78,0xff,0xff,0x78,0xff,0xff,0x3c,0x7f,0xff,0x3c,0x7f,0xff,0xbc,0x7f,0xf7,0xb0,0x3d,0xf7,0x80,0x3f,0xf0,0x00,0x3e,0xe0,0x00,0x1e,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,
 0x0f,0x30,0x00,0x0f,0x00,0x00,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05
};

int menuscreen(void)
{
	int idx;
	unsigned char menucolidx;
	unsigned char optionfadeidx;
	unsigned char lastjoy;
	unsigned char currentoption = 0;

	VIC.spr_mcolor = VIC.spr_ena = 0x00;
	clrscr();
	
	memcpy((void*)0x3C00, menusprites, 384 );

	for( idx = 0; idx < 440; ++idx )
	{
		SCREEN_MAP[40 + idx] = 0xa0; // menutitlechar[idx];
		COLOR_RAM[40 + idx] = menutitlecolours[idx];
		// waitframes( 1 );
	}
	
	VIC.spr3_x = 100;
	VIC.spr4_x = VIC.spr0_x = VIC.spr3_x + 48;
	VIC.spr5_x = VIC.spr1_x = VIC.spr0_x + 48;
	VIC.spr2_x = VIC.spr1_x + 48;
	
	VIC.spr5_y = VIC.spr4_y = VIC.spr3_y = VIC.spr2_y = VIC.spr1_y = VIC.spr0_y = 0;
	
	VIC.spr_exp_x = 0xff;
	VIC.spr_exp_y = 0xff;
	
	coloursprites(COLOR_BLACK);
	VIC.spr_ena = 0xff;
	
	while( VIC.spr0_y < 60 )
	{
		VIC.spr2_y = VIC.spr1_y = VIC.spr0_y += 2;
		VIC.spr5_y = VIC.spr4_y = VIC.spr3_y = VIC.spr0_y + 42;
		waitframes( 2 );
	}
	
	menucolidx = 0;
	while( menucolidx < 4 )
	{
		coloursprites(menufader[menucolidx]);
		++menucolidx;
		waitframes( 4 );
	}
	coloursprites(menufader[menucolidx]);

	waitframes( 10 );
	
	gotoxy( 27, 13 );
	textcolor( COLOR_BLUE );
	printf( "TURBO" );
	textcolor( COLOR_RED );
	printf( "64" );
	
	lastjoy = JOY2[0];
	
	while( (JOY2[0] & JOY_FIRE) != 0 )
	{
		gotoxy( 25, 17 );
		textcolor( (currentoption == 0 ? selectfader[optionfadeidx] : COLOR_GRAY1) );
		printf( "Vs Computer" );

		gotoxy( 28, 19 );
		textcolor( (currentoption == 1 ? selectfader[optionfadeidx] : COLOR_GRAY1) );
		printf( "Vs Human" );
		
		gotoxy( 32, 21 );
		textcolor( (currentoption == 2 ? selectfader[optionfadeidx] : COLOR_GRAY1) );
		printf( "Demo" );
		
		if( (JOY2[0] & JOY_UP) == 0 && (lastjoy & JOY_UP) != 0 )
		{
			currentoption = (currentoption + 2) % 3;
		}
		if( (JOY2[0] & JOY_DOWN) == 0 && (lastjoy & JOY_DOWN) != 0 )
		{
			currentoption = (currentoption + 1) % 3;
		}
		lastjoy = JOY2[0];
		
		optionfadeidx = (optionfadeidx + 1) % 4;
		// waitframes( 4 );
	}
	
	VIC.spr_ena = 0x00;
	return currentoption;
}
